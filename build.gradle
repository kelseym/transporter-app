plugins {
    id 'org.springframework.boot' version '2.5.4'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'maven-publish'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'com.bmuschko.docker-spring-boot-application' version '6.1.4'
}

import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*

archivesBaseName = 'xnat-transporter-app'
version = '0.4.0'

group "org.nrg.xnatx.services"
description "XNAT Transporter Application"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def vApacheSshd = "2.10.0"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-release" }
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot" }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation "org.apache.sshd:sshd-scp:${vApacheSshd}"
    implementation "org.apache.sshd:sshd-core:${vApacheSshd}"
    implementation 'com.h2database:h2'
    implementation 'org.nrg.xnatx.plugins:transporter-plugin:0.4.0'
    testImplementation "junit:junit"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.hamcrest:hamcrest-library"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.security:spring-security-config"
    testImplementation "org.mockito:mockito-core"
    testImplementation "javax.servlet:javax.servlet-api"
    testImplementation "org.springframework:spring-jdbc"
    testImplementation "org.springframework:spring-orm"
    testImplementation "org.apache.commons:commons-dbcp2"
    testImplementation "org.powermock:powermock-module-junit4:2.0.7"
    testImplementation "org.powermock:powermock-module-junit4-rule:2.0.7"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.7"
    testImplementation "org.awaitility:awaitility"

}


tasks.named("bootJar") {
    archiveClassifier = 'all'
}

tasks.named("jar") {
    archiveClassifier = ''
}

task createDockerFile(type: Dockerfile) {
    from 'openjdk:11'
    copyFile bootJar.getArchiveFileName().get(), '/app/' + bootJar.getArchiveFileName().get()
    entryPoint 'java'
    defaultCommand '-jar', '/app/' + bootJar.archiveFileName.get()
    exposePort 2222
}

task syncJar(type: Copy) {
    dependsOn assemble
    from jar.destinationDirectory
    into "$buildDir/docker"
}

task buildImage(type: DockerBuildImage) {
    dependsOn build, createDockerFile, syncJar
    inputDir = createDockerFile.getDestDir()
    images = ["xnat/" + archivesBaseName + ":" + version]
}

